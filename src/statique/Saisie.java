package statique;

import java.awt.datatransfer.*;
import java.awt.event.ActionEvent;
import java.io.*;
import java.util.LinkedList;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.event.UndoableEditEvent;
import javax.swing.event.UndoableEditListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.undo.UndoManager;

import tools.BehaviouralWealth;
import tools.FrequencyOfServiceSearchBehaviour;
import tools.FrequencyOfServiceSearchTime;
import tools.NumberOfProvidedServicesDemand;
import tools.NumberOfServiceDemandsBehaviour;
import tools.NumberOfServiceSearch;
import tools.ServerUDP;
import tools.ServiceWealth;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author pc
 */
public class Saisie extends javax.swing.JFrame {

	LinkedList<BehaviouralWealth> listBehaviouralWealth;
	LinkedList<ServiceWealth> listServiceWealth;
	LinkedList<FrequencyOfServiceSearchTime> listFrequencyOfServiceSearchTime;
	LinkedList<FrequencyOfServiceSearchBehaviour> listFrequencyOfServiceSearchBehaviour;
	LinkedList<NumberOfServiceSearch> listNumberOfServiceSearch;
	LinkedList<NumberOfServiceDemandsBehaviour> listNumberOfServiceDemandsBehaviour;
	LinkedList<NumberOfProvidedServicesDemand> listNumberOfProvidedServicesDemand;
	
    /**
     * Creates new form Saisie
     */
    public Saisie() {
        initComponents();
        chooser = new javax.swing.JFileChooser();
        chooser.setMultiSelectionEnabled(true);
        FileNameExtensionFilter filter1 = new FileNameExtensionFilter("java (*.java)", "java");
        FileNameExtensionFilter filter2 = new FileNameExtensionFilter("text (*.txt)", "txt");
        chooser.addChoosableFileFilter(filter1);
        chooser.addChoosableFileFilter(filter2);
        undoManager = new UndoManager();
        saveAs.setEnabled(false);
        saveAsLbl.setEnabled(false);
        save.setEnabled(false);
        saveLbl.setEnabled(false);
        copy.setEnabled(false);
        copyLbl.setEnabled(false);
        cut.setEnabled(false);
        cutLbl.setEnabled(false);
        erase.setEnabled(false);
        eraseLbl.setEnabled(false);
        undo.setEnabled(false);
        undoLbl.setEnabled(false);
        redo.setEnabled(false);
        redoLbl.setEnabled(false);
    text.getDocument().addUndoableEditListener(
        new UndoableEditListener() {
          public void undoableEditHappened(UndoableEditEvent e) {
            undoManager.addEdit(e.getEdit());
            updateButtons();
          }
        });
    serverUDP = new ServerUDP();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        text = new javax.swing.JTextArea();
        jToolBar1 = new javax.swing.JToolBar();
        openLbl = new javax.swing.JLabel();
        saveLbl = new javax.swing.JLabel();
        saveAsLbl = new javax.swing.JLabel();
        jToolBar2 = new javax.swing.JToolBar();
        runLbl = new javax.swing.JLabel();
        jToolBar3 = new javax.swing.JToolBar();
        chartLbl = new javax.swing.JLabel();
        baseLbl = new javax.swing.JLabel();
        jToolBar4 = new javax.swing.JToolBar();
        undoLbl = new javax.swing.JLabel();
        redoLbl = new javax.swing.JLabel();
        copyLbl = new javax.swing.JLabel();
        cutLbl = new javax.swing.JLabel();
        pasteLbl = new javax.swing.JLabel();
        eraseLbl = new javax.swing.JLabel();
        jToolBar5 = new javax.swing.JToolBar();
        lblExampleWithoutOrganization = new javax.swing.JLabel();
        lblExampleWithOrganization = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        runItm = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        open = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        saveAs = new javax.swing.JMenuItem();
        save = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        exit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        undo = new javax.swing.JMenuItem();
        redo = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        copy = new javax.swing.JMenuItem();
        cut = new javax.swing.JMenuItem();
        paste = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        erase = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        goResult = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        goData = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JPopupMenu.Separator();
        menuExampleWithoutOrganization = new javax.swing.JMenuItem();
        jSeparator9 = new javax.swing.JPopupMenu.Separator();
        menuExampleWithOrganization = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        menuDocument = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        menuAboutMe = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ZITA : Zouheyr's Integrated Tool for Autonomy mesurments");

        text.setColumns(20);
        text.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        text.setRows(5);
        text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                textMouseReleased(evt);
            }
        });
        text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(text);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
        );

        jToolBar1.setRollover(true);

        openLbl.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("file:/E:/Culture Info Avancé/Images/MyProjectImages/folder_32.png")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());
        openLbl.setToolTipText("Open folder");
        openLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        openLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                openLblMouseClicked(evt);
            }
        });
        jToolBar1.add(openLbl);

        saveLbl.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("file:/E:/Culture Info Avancé/Images/MyProjectImages/save_32.png")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());
        saveLbl.setToolTipText("Save");
        saveLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveLblMouseClicked(evt);
            }
        });
        jToolBar1.add(saveLbl);

        saveAsLbl.setIcon(new javax.swing.ImageIcon("C:\\Users\\Home\\Documents\\NetBeansProjects\\Model\\save_download_32.png")); // NOI18N
        saveAsLbl.setToolTipText("Save as");
        saveAsLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveAsLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveAsLblMouseClicked(evt);
            }
        });
        jToolBar1.add(saveAsLbl);

        jToolBar2.setRollover(true);

        runLbl.setIcon(new javax.swing.ImageIcon("C:\\Users\\Home\\Documents\\NetBeansProjects\\Model\\start-icon.png")); // NOI18N
        runLbl.setToolTipText("Run");
        runLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        runLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                runLblMouseClicked(evt);
            }
        });
        jToolBar2.add(runLbl);

        jToolBar3.setRollover(true);

        chartLbl.setIcon(new javax.swing.ImageIcon("E:\\Culture Info Avancé\\Images\\MyProjectImages\\Line-chart.png")); // NOI18N
        chartLbl.setToolTipText("Show results on charts...");
        chartLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        chartLbl.setEnabled(false);
        chartLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chartLblMouseClicked(evt);
            }
        });
        jToolBar3.add(chartLbl);

        baseLbl.setIcon(new javax.swing.ImageIcon("E:\\Culture Info Avancé\\Images\\MyProjectImages\\Catalog.png")); // NOI18N
        baseLbl.setToolTipText("Show results on textual report...");
        baseLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        baseLbl.setEnabled(false);
        baseLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                baseLblMouseClicked(evt);
            }
        });
        jToolBar3.add(baseLbl);

        jToolBar4.setRollover(true);

        undoLbl.setIcon(new javax.swing.ImageIcon("C:\\Users\\Home\\Documents\\NetBeansProjects\\Model\\undo_32x32.png")); // NOI18N
        undoLbl.setToolTipText("undo");
        undoLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        undoLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                undoLblMouseClicked(evt);
            }
        });
        jToolBar4.add(undoLbl);

        redoLbl.setIcon(new javax.swing.ImageIcon("C:\\Users\\Home\\Documents\\NetBeansProjects\\Model\\redo_32x32.png")); // NOI18N
        redoLbl.setToolTipText("redo");
        redoLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        redoLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                redoLblMouseClicked(evt);
            }
        });
        jToolBar4.add(redoLbl);

        copyLbl.setIcon(new javax.swing.ImageIcon("C:\\Users\\Home\\Documents\\NetBeansProjects\\Model\\copy_32x32.png")); // NOI18N
        copyLbl.setToolTipText("copy");
        copyLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        copyLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                copyLblMouseClicked(evt);
            }
        });
        jToolBar4.add(copyLbl);

        cutLbl.setIcon(new javax.swing.ImageIcon("C:\\Users\\Home\\Documents\\NetBeansProjects\\Model\\cut_32x32.png")); // NOI18N
        cutLbl.setToolTipText("cut");
        cutLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cutLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cutLblMouseClicked(evt);
            }
        });
        jToolBar4.add(cutLbl);

        pasteLbl.setIcon(new javax.swing.ImageIcon("C:\\Users\\Home\\Documents\\NetBeansProjects\\Model\\paste_32x32.png")); // NOI18N
        pasteLbl.setToolTipText("paste");
        pasteLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pasteLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pasteLblMouseClicked(evt);
            }
        });
        jToolBar4.add(pasteLbl);

        eraseLbl.setIcon(new javax.swing.ImageIcon("C:\\Users\\Home\\Documents\\NetBeansProjects\\Model\\Eraser-icon2.png")); // NOI18N
        eraseLbl.setToolTipText("erase");
        eraseLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        eraseLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eraseLblMouseClicked(evt);
            }
        });
        jToolBar4.add(eraseLbl);

        jToolBar5.setRollover(true);

        lblExampleWithoutOrganization.setIcon(new javax.swing.ImageIcon("E:\\Culture Info Avancé\\Images\\MyProjectImages\\My-tickets.png")); // NOI18N
        lblExampleWithoutOrganization.setToolTipText("Example without organization...");
        lblExampleWithoutOrganization.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblExampleWithoutOrganization.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblExampleWithoutOrganizationMouseClicked(evt);
            }
        });
        jToolBar5.add(lblExampleWithoutOrganization);

        lblExampleWithOrganization.setIcon(new javax.swing.ImageIcon("E:\\Culture Info Avancé\\Images\\MyProjectImages\\Man.png")); // NOI18N
        lblExampleWithOrganization.setToolTipText("Example with organization...");
        lblExampleWithOrganization.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblExampleWithOrganization.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblExampleWithOrganizationMouseClicked(evt);
            }
        });
        jToolBar5.add(lblExampleWithOrganization);

        jMenu1.setMnemonic('F');
        jMenu1.setText("File");

        runItm.setIcon(new javax.swing.ImageIcon("C:\\Users\\Home\\Documents\\NetBeansProjects\\Model\\start-icon.png")); // NOI18N
        runItm.setText("Run...");
        runItm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runItmActionPerformed(evt);
            }
        });
        jMenu1.add(runItm);
        jMenu1.add(jSeparator7);

        open.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        open.setIcon(new javax.swing.ImageIcon("C:\\Users\\Home\\Documents\\NetBeansProjects\\Model\\folder_32.png")); // NOI18N
        open.setText("Open...");
        open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openActionPerformed(evt);
            }
        });
        jMenu1.add(open);
        jMenu1.add(jSeparator1);

        saveAs.setIcon(new javax.swing.ImageIcon("C:\\Users\\Home\\Documents\\NetBeansProjects\\Model\\save_download_32.png")); // NOI18N
        saveAs.setText("Save as...");
        saveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsActionPerformed(evt);
            }
        });
        jMenu1.add(saveAs);

        save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        save.setIcon(new javax.swing.ImageIcon("C:\\Users\\Home\\Documents\\NetBeansProjects\\Model\\save_32.png")); // NOI18N
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        jMenu1.add(save);
        jMenu1.add(jSeparator2);

        exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        exit.setIcon(new javax.swing.ImageIcon("C:\\Users\\Home\\Documents\\NetBeansProjects\\Model\\close_32.png")); // NOI18N
        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        jMenu1.add(exit);

        jMenuBar1.add(jMenu1);

        jMenu2.setMnemonic('E');
        jMenu2.setText("Edit");

        undo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        undo.setIcon(new javax.swing.ImageIcon("C:\\Users\\Home\\Documents\\NetBeansProjects\\Model\\undo_32x32.png")); // NOI18N
        undo.setText("Undo");
        undo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoActionPerformed(evt);
            }
        });
        jMenu2.add(undo);

        redo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
        redo.setIcon(new javax.swing.ImageIcon("C:\\Users\\Home\\Documents\\NetBeansProjects\\Model\\redo_32x32.png")); // NOI18N
        redo.setText("Redo");
        redo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redoActionPerformed(evt);
            }
        });
        jMenu2.add(redo);
        jMenu2.add(jSeparator3);

        copy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        copy.setIcon(new javax.swing.ImageIcon("C:\\Users\\Home\\Documents\\NetBeansProjects\\Model\\copy_32x32.png")); // NOI18N
        copy.setText("Copy");
        copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyActionPerformed(evt);
            }
        });
        jMenu2.add(copy);

        cut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        cut.setIcon(new javax.swing.ImageIcon("C:\\Users\\Home\\Documents\\NetBeansProjects\\Model\\cut_32x32.png")); // NOI18N
        cut.setText("Cut");
        cut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cutActionPerformed(evt);
            }
        });
        jMenu2.add(cut);

        paste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        paste.setIcon(new javax.swing.ImageIcon("C:\\Users\\Home\\Documents\\NetBeansProjects\\Model\\paste_32x32.png")); // NOI18N
        paste.setText("Paste");
        paste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasteActionPerformed(evt);
            }
        });
        jMenu2.add(paste);
        jMenu2.add(jSeparator4);

        erase.setIcon(new javax.swing.ImageIcon("C:\\Users\\Home\\Documents\\NetBeansProjects\\Model\\Eraser-icon2.png")); // NOI18N
        erase.setText("Erase");
        erase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eraseActionPerformed(evt);
            }
        });
        jMenu2.add(erase);

        jMenuBar1.add(jMenu2);

        jMenu4.setMnemonic('N');
        jMenu4.setText("Navigate");

        goResult.setIcon(new javax.swing.ImageIcon("E:\\Culture Info Avancé\\Images\\MyProjectImages\\Line-chart.png")); // NOI18N
        goResult.setText("Show results on charts...");
        goResult.setEnabled(false);
        goResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goResultActionPerformed(evt);
            }
        });
        jMenu4.add(goResult);
        jMenu4.add(jSeparator6);

        goData.setIcon(new javax.swing.ImageIcon("E:\\Culture Info Avancé\\Images\\MyProjectImages\\Catalog.png")); // NOI18N
        goData.setText("Show results on textual report...");
        goData.setEnabled(false);
        goData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goDataActionPerformed(evt);
            }
        });
        jMenu4.add(goData);
        jMenu4.add(jSeparator8);

        menuExampleWithoutOrganization.setIcon(new javax.swing.ImageIcon("E:\\Culture Info Avancé\\Images\\MyProjectImages\\My-tickets.png")); // NOI18N
        menuExampleWithoutOrganization.setText("Example Without Organization...");
        menuExampleWithoutOrganization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuExampleWithoutOrganizationActionPerformed(evt);
            }
        });
        jMenu4.add(menuExampleWithoutOrganization);
        jMenu4.add(jSeparator9);

        menuExampleWithOrganization.setIcon(new javax.swing.ImageIcon("E:\\Culture Info Avancé\\Images\\MyProjectImages\\Man.png")); // NOI18N
        menuExampleWithOrganization.setText("Example With Organization...");
        menuExampleWithOrganization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuExampleWithOrganizationActionPerformed(evt);
            }
        });
        jMenu4.add(menuExampleWithOrganization);

        jMenuBar1.add(jMenu4);

        jMenu3.setMnemonic('?');
        jMenu3.setText("?");

        menuDocument.setIcon(new javax.swing.ImageIcon("C:\\Users\\Home\\Documents\\NetBeansProjects\\Model\\Bookmarks.png")); // NOI18N
        menuDocument.setText("Document");
        menuDocument.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDocumentActionPerformed(evt);
            }
        });
        jMenu3.add(menuDocument);
        jMenu3.add(jSeparator5);

        menuAboutMe.setIcon(new javax.swing.ImageIcon("C:\\Users\\Home\\Documents\\NetBeansProjects\\Model\\info_button_32.png")); // NOI18N
        menuAboutMe.setText("About Me");
        menuAboutMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAboutMeActionPerformed(evt);
            }
        });
        jMenu3.add(menuAboutMe);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 318, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToolBar3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToolBar2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToolBar5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToolBar4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void redoActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        undoManager.redo();
        updateButtons();
    }                                    

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(null,"Do you want to exit ?!","Exit Confirmation" ,1)==JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }                                    

    private void openActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        int n = chooser.showOpenDialog(this);
        if( n == JFileChooser.APPROVE_OPTION){
        if(chooser.getSelectedFile()==null){ 
            saveAs.setEnabled(false);
            saveAsLbl.setEnabled(false);
        }
        else {
            saveAs.setEnabled(true);
            saveAsLbl.setEnabled(true);     
        }
        File[] files = chooser.getSelectedFiles();
        String chaine = new String();
        try {
        	for (int i = 0; i < files.length; i++) {
                InputStream ips = new FileInputStream(files[i].toString());
                InputStreamReader ipsr = new InputStreamReader(ips);
                BufferedReader br = new BufferedReader(ipsr);
                String ligne;
                while ((ligne = br.readLine()) != null) {
                    chaine += ligne + "\n";
                }
                br.close();
            }
            text.setText(chaine);
        } catch (Exception e) {
            System.out.println(e.toString());
        }
        save.setEnabled(false);
        saveLbl.setEnabled(false);
        }
    }                                    

    private void saveAsActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        chooser.showSaveDialog(this);
        File s = chooser.getSelectedFile();
        ecrireFichier(s);
        save.setEnabled(false);
        saveLbl.setEnabled(false);
    }                                      

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        File s = chooser.getSelectedFile();
        if( s == null ) {
            saveAsActionPerformed(evt); 
        }
        else {
        ecrireFichier(s);
        }
        save.setEnabled(false);
        saveLbl.setEnabled(false);
    }                                    

    private void copyActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        String s = text.getSelectedText();
            StringSelection stclip = new StringSelection(s);
            clip.setContents(stclip, stclip);
    }                                    

    private void cutActionPerformed(java.awt.event.ActionEvent evt) {                                    
        // TODO add your handling code here:
        String s = text.getSelectedText();
            StringSelection stclip = new StringSelection(s);
            clip.setContents(stclip, stclip);
            text.replaceRange("", text.getSelectionStart(), text.getSelectionEnd());
            copy.setEnabled(false);
            copyLbl.setEnabled(false);
            cut.setEnabled(false);
            cutLbl.setEnabled(false);
            erase.setEnabled(false);
            eraseLbl.setEnabled(false);
    }                                   

    private void pasteActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
        try {
            Transferable tran = clip.getContents(text);
            String s = (String) tran.getTransferData(DataFlavor.stringFlavor);
            text.replaceRange(s, text.getSelectionStart(), text.getSelectionEnd());
            copy.setEnabled(false);
            copyLbl.setEnabled(false);
            cut.setEnabled(false);
            cutLbl.setEnabled(false);
            erase.setEnabled(false);
            eraseLbl.setEnabled(false);
        } catch (UnsupportedFlavorException ex) {
            Logger.getLogger(Saisie.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Saisie.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                     

    private void eraseActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
        text.replaceRange("", text.getSelectionStart(), text.getSelectionEnd());
        copy.setEnabled(false);
        copyLbl.setEnabled(false);
        cut.setEnabled(false);
        cutLbl.setEnabled(false);
        erase.setEnabled(false);
        eraseLbl.setEnabled(false);
    }                                     

    private void textMouseReleased(java.awt.event.MouseEvent evt) {                                   
        // TODO add your handling code here:
        if(text.getSelectionStart()!=text.getSelectionEnd()){
            copy.setEnabled(true);
            copyLbl.setEnabled(true);
            cut.setEnabled(true);
            cutLbl.setEnabled(true);
            erase.setEnabled(true);
            eraseLbl.setEnabled(true);
        }else{
            copy.setEnabled(false);
            copyLbl.setEnabled(false);
            cut.setEnabled(false);
            cutLbl.setEnabled(false);
            erase.setEnabled(false);
            eraseLbl.setEnabled(false);
        }
    }                                  

    private void textKeyReleased(java.awt.event.KeyEvent evt) {                                 
        // TODO add your handling code here:
        saveAs.setEnabled(true);
        saveAsLbl.setEnabled(true);
        save.setEnabled(true);
        saveLbl.setEnabled(true);
        if(text.getSelectionStart()!=text.getSelectionEnd()){
            copy.setEnabled(true);
            copyLbl.setEnabled(true);
            cut.setEnabled(true);
            cutLbl.setEnabled(true);
            erase.setEnabled(true);
            eraseLbl.setEnabled(true);
        }else{
            copy.setEnabled(false);
            copyLbl.setEnabled(false);
            cut.setEnabled(false);
            cutLbl.setEnabled(false);
            erase.setEnabled(false);
            eraseLbl.setEnabled(false);
        }
    }                                

    private void undoActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        undoManager.undo();
        updateButtons();
    }                                    

    private void menuAboutMeActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        AboutMe aboutMe = new AboutMe(this,true);
        aboutMe.setVisible(true);
    }                                           

    private void goResultActionPerformed(java.awt.event.ActionEvent evt) {                                         
    	ShowCharts showChats = new ShowCharts(listBehaviouralWealth,listServiceWealth,listFrequencyOfServiceSearchTime,listFrequencyOfServiceSearchBehaviour,listNumberOfServiceSearch,listNumberOfServiceDemandsBehaviour,listNumberOfProvidedServicesDemand);
    	showChats.setVisible(true);
    }                                        

    private void goDataActionPerformed(java.awt.event.ActionEvent evt) {                                       
        try {
            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler C://Users//Home//myWorkspace//ZITA//rapport.txt");
        } catch (IOException ex) {
            Logger.getLogger(Saisie.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                      

    private void runItmActionPerformed(java.awt.event.ActionEvent evt) {
    	serverUDP.stopWaitingForClients();
    	
        MyProject myProject = new MyProject(text.getText());
        myProject.calculerAllRichesseComportementale();
        
        serverUDP.UpdatTimeList();
        serverUDP.generateTextualReport();
        serverUDP.generateRichesseDeService();
        serverUDP.generateFrequenceDeRechercheDuree();
        serverUDP.generateFrequenceDeRechercheComportement();
        serverUDP.generateRechercheDesServices();
        serverUDP.generateNombreDesDemandesEtComportements();
        serverUDP.generateServicesRenduesParDemandes();
        
        listBehaviouralWealth = myProject.getBehaviouralWealthList();
        listServiceWealth = serverUDP.getRichesseDeService();
        listFrequencyOfServiceSearchTime = serverUDP.getFrequenceDeRechercheDuree();
        listFrequencyOfServiceSearchBehaviour = serverUDP.getFrequenceDeRechercheComportement();
        listNumberOfServiceSearch = serverUDP.getRechercheDesServices();
        listNumberOfServiceDemandsBehaviour = serverUDP.getNombreDesDemandesEtComportements();
        listNumberOfProvidedServicesDemand = serverUDP.getServicesRenduesParDemandes();
        
        enableOptions();
        disableRun();
    }                                      

    private void openLblMouseClicked(java.awt.event.MouseEvent evt) {                                     
        // TODO add your handling code here:
        ActionEvent e = null;
        openActionPerformed(e);
    }                                    

    private void saveAsLblMouseClicked(java.awt.event.MouseEvent evt) {                                       
        // TODO add your handling code here:
        ActionEvent e = null;
        saveAsActionPerformed(e);
    }                                      

    private void saveLblMouseClicked(java.awt.event.MouseEvent evt) {                                     
        // TODO add your handling code here:
        ActionEvent e = null;
        saveActionPerformed(e);
    }                                    

    private void runLblMouseClicked(java.awt.event.MouseEvent evt) {                                    
        // TODO add your handling code here:
        ActionEvent e = null;
        runItmActionPerformed(e);
    }                                   

    private void chartLblMouseClicked(java.awt.event.MouseEvent evt) {                                      
        // TODO add your handling code here:
        ActionEvent e = null;
        goResultActionPerformed(e);
    }                                     

    private void baseLblMouseClicked(java.awt.event.MouseEvent evt) {                                     
        // TODO add your handling code here:
        ActionEvent e = null;
        goDataActionPerformed(e);
    }                                    

    private void undoLblMouseClicked(java.awt.event.MouseEvent evt) {                                     
        // TODO add your handling code here:
        ActionEvent e = null;
        undoActionPerformed(e);
    }                                    

    private void redoLblMouseClicked(java.awt.event.MouseEvent evt) {                                     
        // TODO add your handling code here:
        ActionEvent e = null;
        redoActionPerformed(e);
    }                                    

    private void copyLblMouseClicked(java.awt.event.MouseEvent evt) {                                     
        // TODO add your handling code here:
        ActionEvent e = null;
        copyActionPerformed(e);
    }                                    

    private void cutLblMouseClicked(java.awt.event.MouseEvent evt) {                                    
        // TODO add your handling code here:
        ActionEvent e = null;
        cutActionPerformed(e);
    }                                   

    private void pasteLblMouseClicked(java.awt.event.MouseEvent evt) {                                      
        // TODO add your handling code here:
        ActionEvent e = null;
        pasteActionPerformed(e);
    }                                     

    private void eraseLblMouseClicked(java.awt.event.MouseEvent evt) {                                      
        // TODO add your handling code here:
        ActionEvent e = null;
        eraseActionPerformed(e);
    }                                     

    private void menuDocumentActionPerformed(java.awt.event.ActionEvent evt) {                                             
        try {
            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler E://Culture Info Avancé//Images//MyProjectImages//Document.pdf");
        } catch (IOException ex) {
            Logger.getLogger(Saisie.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                            

    private void menuExampleWithoutOrganizationActionPerformed(java.awt.event.ActionEvent evt) {                                                               
    	ExampleWithoutOrganization.MainFrame exampleWithoutOrganization = new ExampleWithoutOrganization.MainFrame();
    	exampleWithoutOrganization.setVisible(true);
    }                                                              

    private void menuExampleWithOrganizationActionPerformed(java.awt.event.ActionEvent evt) {                                                            
    	ExampleWithOrganization.MainFrame exampleWithOrganization = new ExampleWithOrganization.MainFrame();
    	exampleWithOrganization.setVisible(true);
    }                                                           

    private void lblExampleWithoutOrganizationMouseClicked(java.awt.event.MouseEvent evt) {                                                           
        ActionEvent e = null;
        menuExampleWithoutOrganizationActionPerformed(e);
    }                                                          

    private void lblExampleWithOrganizationMouseClicked(java.awt.event.MouseEvent evt) {                                                        
        ActionEvent e = null;
        menuExampleWithOrganizationActionPerformed(e);
    }                                                       

    private void disableRun(){
        runItm.setEnabled(false);
        runLbl.setEnabled(false);
    }
    
    private void enableOptions(){
        goResult.setEnabled(true);
        goData.setEnabled(true);
        chartLbl.setEnabled(true);
        baseLbl.setEnabled(true);
    }
    
    private void updateButtons() {
        undo.setEnabled(undoManager.canUndo());
        redo.setEnabled(undoManager.canRedo());
        undoLbl.setEnabled(undoManager.canUndo());
        redoLbl.setEnabled(undoManager.canRedo());
  }
    
    private void ecrireFichier(File s){
        // ecrir dans un fichier
        try {
            FileWriter fw;
            StringTokenizer z = new StringTokenizer(text.getText(),"\n");
            String token = new String();
            fw = new FileWriter(s.toString());
                BufferedWriter bw = new BufferedWriter(fw);
                PrintWriter fichierSortie = new PrintWriter(bw);
                while(z.hasMoreTokens()){
                    token = z.nextToken();
                    fichierSortie.println(token);
                }
                fichierSortie.close();
        } catch (IOException ex) {
            Logger.getLogger(Saisie.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    /**
     * 
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                /*if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }*/
                UIManager.setLookAndFeel("com.jtattoo.plaf.smart.SmartLookAndFeel");
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Saisie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Saisie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Saisie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Saisie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Saisie().setVisible(true);
            }
        });
    }
    
    ServerUDP serverUDP;
    
    private javax.swing.JFileChooser chooser;
    Clipboard clip = getToolkit().getSystemClipboard();
    private UndoManager undoManager;
    // Variables declaration - do not modify                     
    private javax.swing.JLabel baseLbl;
    private javax.swing.JLabel chartLbl;
    private javax.swing.JMenuItem copy;
    private javax.swing.JLabel copyLbl;
    private javax.swing.JMenuItem cut;
    private javax.swing.JLabel cutLbl;
    private javax.swing.JMenuItem erase;
    private javax.swing.JLabel eraseLbl;
    private javax.swing.JMenuItem exit;
    private javax.swing.JMenuItem goData;
    private javax.swing.JMenuItem goResult;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JPopupMenu.Separator jSeparator8;
    private javax.swing.JPopupMenu.Separator jSeparator9;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JToolBar jToolBar4;
    private javax.swing.JToolBar jToolBar5;
    private javax.swing.JLabel lblExampleWithOrganization;
    private javax.swing.JLabel lblExampleWithoutOrganization;
    private javax.swing.JMenuItem menuAboutMe;
    private javax.swing.JMenuItem menuDocument;
    private javax.swing.JMenuItem menuExampleWithOrganization;
    private javax.swing.JMenuItem menuExampleWithoutOrganization;
    private javax.swing.JMenuItem open;
    private javax.swing.JLabel openLbl;
    private javax.swing.JMenuItem paste;
    private javax.swing.JLabel pasteLbl;
    private javax.swing.JMenuItem redo;
    private javax.swing.JLabel redoLbl;
    private javax.swing.JMenuItem runItm;
    private javax.swing.JLabel runLbl;
    private javax.swing.JMenuItem save;
    private javax.swing.JMenuItem saveAs;
    private javax.swing.JLabel saveAsLbl;
    private javax.swing.JLabel saveLbl;
    private javax.swing.JTextArea text;
    private javax.swing.JMenuItem undo;
    private javax.swing.JLabel undoLbl;
    // End of variables declaration                   
}